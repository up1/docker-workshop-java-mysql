# Apache Maven https://hub.docker.com/_/maven/
$docker image pull maven:3.5.4-jdk-8-alpine

For Mac/Linux
$docker container run --rm \
 -v $(pwd):/demo/java \
 -w /demo/java \
maven:3.5.4-jdk-8-alpine mvn clean package

For Windows
$docker container run --rm \
 -v %CD%:/demo/java \
 -w /demo/java \
maven:3.5.4-jdk-8-alpine mvn clean package

Using docker volume
$container run --rm -w /src -v $(pwd):/src -v maven_lib:/root/.m2  maven:3.6.0-jdk-8-alpine mvn clean package

# Build with dockerfile + maven

FROM maven:3.5.4-jdk-8-alpine
WORKDIR /src
COPY  . /src
RUN mvn clean package

#Create image
$docker image build -t build:0.1 -f Dockerfile_build .

#Copy file from container to host
$docker container run --rm \
 -v $(pwd)/war:/tmp/war \
 build:0.1 \
 sh -c "cp /src/target/api.war /tmp/war"

#Deploy :: build image
$docker image build -t deploy:0.1 -f Dockerfile_deploy .

# Create container of MySQL
$docker container run -d \
  --name=db \
  -e "MYSQL_ROOT_PASSWORD=mypassword" \
  -e "MYSQL_DATABASE=sample" \
  -e "MYSQL_USER=user01" \
  -e "MYSQL_PASSWORD=password" \
 mysql:5.7


 # API container
 $docker container run -p 8080:8080 \
   --link db:my_database \
   docker-workshop-java-mysql_api
